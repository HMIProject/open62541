# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: test

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short

jobs:
  run:
    strategy:
      matrix:
        runner_os: [windows-latest, ubuntu-latest]
        features: [all-features, no-default-features]
        include:
          # Add derived attribute `run_doctests`.
          - run_doctests: true
          - runner_os: windows-latest
            # Doctests fill up disk storage on Windows, and we don't expect much
            # different behavior anyway. It suffices to run them on Linux. Also,
            # Windows runners are 2 times as expensive on GitHub.
            run_doctests: false
          - features: no-default-features
            # Doctests may use any features and there is no easy way to activate
            # certain features only for some doctests.
            run_doctests: false

    runs-on: ${{ matrix.runner_os }}

    steps:
      - name: Install Rust toolchain
        # Use specific Rust version that is the minimum supported `rust-version`
        # (MSRV) from `Cargo.toml`.
        uses: dtolnay/rust-toolchain@1.71

      # Check out the repository before the remaining steps that depend on it.
      # All preceding steps are independent of the repository contents.
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache Rust toolchain and build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          # The cache should not be shared between different workflows and jobs.
          shared-key: ${{ github.workflow }}-${{ github.job }}

      - name: Build with --${{ matrix.features }}
        run: >-
          cargo build --locked --${{ matrix.features }}

      - name: Run tests (bins/lib/tests/examples) with --${{ matrix.features }}
        run: >-
          cargo test --locked --${{ matrix.features }}
          --bins --lib --tests --examples

      # Compile and run doctests, which have been excluded in the previous step(s).
      #
      # When cross-compiling the doctests are skipped silently, even with the default
      # target options that should include them!
      #
      # See https://github.com/rust-lang/cargo/issues/7040 for an (unstable)
      # feature flag that should one day allow us to cross-compile doctests.
      #
      # For now, we cannot cross-compile doctests and must always run them on
      # the runner's native platform.
      - name: Run doctests with --${{ matrix.features }}
        if: ${{ matrix.run_doctests }}
        run: >-
          cargo test --locked --${{ matrix.features }}
          --doc
