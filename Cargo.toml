[package]
name = "open62541"
version = "0.6.0-pre.3"
authors = ["HMI Project"]
edition = "2021"
# Keep the MSRV number here in sync with `test.yaml`. We require Rust 1.77 since
# we want to use C-string literals.
rust-version = "1.77"
description = "High-level, safe bindings for the C99 library open62541, an open source and free implementation of OPC UA (OPC Unified Architecture)."
documentation = "https://docs.rs/open62541"
readme = "README.md"
homepage = "https://github.com/HMIProject/open62541"
repository = "https://github.com/HMIProject/open62541.git"
license = "MPL-2.0"
keywords = ["opcua", "plc", "automation", "hardware", "protocol"]
categories = ["network-programming", "embedded", "api-bindings"]
include = ["src/", "README.md", "CHANGELOG.md"]

[dependencies]
futures-channel = "0.3.30"
futures-core = { version = "0.3.30", default-features = false }
futures-util = { version = "0.3.30", default-features = false }
log = "0.4.20"
open62541-sys = "0.4.0-pre.4"
paste = "1.0.14"
serde = { version = "1.0.194", optional = true }
serde_json = { version = "1.0.111", optional = true }
thiserror = "1.0.56"
time = { version = "0.3.31", optional = true }
tokio = { version = "1.35.1", optional = true, features = [
  "rt",
  "sync",
  "time",
] }

[dev-dependencies]
anyhow = "1.0.79"
futures = "0.3.30"
env_logger = "0.11.1"
rand = "0.8.5"
time = { version = "0.3.31", features = ["macros"] }
# Enable multi-threaded runtime in examples to increase the chances of finding
# problems with our use of open62541.
tokio = { version = "1.35.1", features = ["macros", "rt-multi-thread"] }

[features]
default = ["serde", "time", "tokio"]
serde = ["dep:serde", "dep:serde_json", "time?/formatting", "time?/serde"]
time = ["dep:time"]
tokio = ["dep:tokio"]

[lints.rust]
future_incompatible = "warn"
let_underscore = "warn"
nonstandard_style = "warn"
rust_2018_compatibility = "warn"
rust_2018_idioms = "warn"
rust_2021_compatibility = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused = "warn"
warnings = "warn"

[lints.clippy]
as_conversions = "warn"
as_ptr_cast_mut = "warn"
as_underscore = "warn"
clone_on_ref_ptr = "warn"
missing_const_for_fn = "warn"
mod_module_files = "warn"
pedantic = "warn"

# This warns even when lint group and lint have the same level (`warn`). This is
# very misleading and results in lots of false positives. See
# https://github.com/rust-lang/rust-clippy/issues/12270
lint_groups_priority = "allow"

[[example]]
name = "async_browse"
path = "examples/async_browse.rs"
required-features = ["tokio"]

[[example]]
name = "async_call"
path = "examples/async_call.rs"
required-features = ["tokio"]

[[example]]
name = "async_client_builder"
path = "examples/async_client_builder.rs"
required-features = ["tokio"]

[[example]]
name = "async_client"
path = "examples/async_client.rs"
required-features = ["tokio"]

[[example]]
name = "async_concurrent"
path = "examples/async_concurrent.rs"
required-features = ["tokio"]

[[example]]
name = "async_monitor"
path = "examples/async_monitor.rs"
required-features = ["tokio"]

[[example]]
name = "async_read_write"
path = "examples/async_read_write.rs"
required-features = ["tokio"]

[[example]]
name = "async_send_sync"
path = "examples/async_send_sync.rs"
required-features = ["time", "tokio"]

[[example]]
name = "client_builder"
path = "examples/client_builder.rs"

[[example]]
name = "server"
path = "examples/server.rs"

[[example]]
name = "server_builder"
path = "examples/server_builder.rs"
